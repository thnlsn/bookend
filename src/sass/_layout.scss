.container {
  max-width: 120rem; // The main container will only ever be 120rem, but can shrink if there isn't space (to 100% of the available space)
  margin: 8rem auto;
  background-color: var(--color-grey-light-1);
  box-shadow: 0 2rem 6rem rgba(0, 0, 0, 0.3);

  @media only screen and (max-width: $bp-largest) {
    // Completely remove the red background and have the content take up the whole page
    margin: 0;
    // Make sure that the content fills the whole page because above, we declared the max-width of 120rem, which might change when we change the html {font-size}, since rem will be smaller
    max-width: 100%;
    width: 100%;
  }
}

.header {
  // Inherits
  font-size: 1.4rem;

  // Base styles
  height: 7rem;
  background-color: #fff;
  border-bottom: var(--line);

  // Flex
  display: flex; // This will automatically set all the header children side by side
  justify-content: space-between; // Maximize the space between each item
  align-items: center;
}

.content {
  display: flex; // This is now a flex container

  @media only screen and (max-width: $bp-medium) {
    flex-direction: column;
  }
} // Children: .sidebar, .hotel-view

.sidebar {
  background-color: var(--color-grey-dark-1);
  flex: 0 0 18%; // Do not want it to grow OR shrink, but we want it always to stay 18% of the container width (because of %, it will shrink regardless)

  display: flex;
  flex-direction: column; // Because the sidebar should be a column rather than the default row
  justify-content: space-between; // So the legal text is pushed to the bottom

  @media only screen and (max-width: $bp-medium) {
    flex-direction: row;
    justify-content: stretch;
  }
}

.main-view {
  background-color: #fff;

  flex: 1; // Allow the element to grow as much as it can, basically the rest of the space not taken up by other elements basis so 82% (sidebar takes 18% above)
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////
// HOTEL VIEW CONTENT LAYOUT ///////////////////////////////////////////////////////////////////////////////
.detail {
  font-size: 1.4rem; // So the entire content section inherits this font-size:
  font-weight: 300;

  display: flex;
  padding: 4.5rem;
  background-color: var(--color-grey-light-1);
  border-bottom: var(--line);
}

.description {
  font-size: 1.4rem; // This will determine the font for the entire container because of inheritance
  background-color: #fff;
  box-shadow: var(--shadow-light);
  padding: 3rem;
  margin-right: 4.5rem;

  flex: 0 0 60%; // Usually if the flex basis is a percentage, the grow and shrink will be 0, because if you want a specific size, you dont want it to grow or shrink
}

.user-reviews {
  display: flex;
  flex-direction: column;
  align-items: center; // Remember this defaults to stretch

  flex: 1; // Grow
}
